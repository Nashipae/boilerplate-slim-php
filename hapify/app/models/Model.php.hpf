<?php
 
namespace App\Models;
 
class <<M AA>> extends BaseModel {
 
	/**
     * The table associated with the model.
     *
     * @var string
     */
   	protected $table = '<<M a_a>>';
 
   	/**
     * The attributes that are mass assignable.
     *
     * @var array
     */
   	protected $fillable = array(
<<@ F /in f>>
        '<<f a_a>>',
<<@>>
   	);
 
   	/**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = array(
<<@ F hd+in f>>
        '<<f a_a>>',
<<@>>
    );
 
    /**
     * Get search cursor
     * @param  \Illuminate\Database\Query\Builder $query  query_buider of service model
     * @param  array $filter column to search
     * @return \Illuminate\Database\Query\Builder         cursor of the query
     */
    public static function get_cursor($filter, $credentials = null, $from_admin = false){
    
        unset($filter['_page']);
        unset($filter['_limit']);
        unset($filter['_order']);
        unset($filter['_sort']);
    
        $query = new <<M AA>>();

<<@ F se f>>
 
    <<? f tN+tD>>
        // Set min for <<f a>> if defined
        if (isset($filter['<<f a_a>>_min'])) {
            $query = $query->orWhere('<<f a_a>>', '>', $filter['<<f a_a>>_min']);
        }
        // Set max for <<f a>> if defined
        if (isset($filter['<<f a_a>>_max'])) {
            $query = $query->orWhere('<<f a_a>>', '<', $filter['<<f a_a>>_max']);
        }
    <<?? f tE>>

        // Convert id for <<f a>>
        if (isset($filter['<<f a_a>>'])) {
        <<? f ml>>
            $query = $query-><<f a_a>>->where('<<f a_a>>', $filter['<<f a_a>>']);
        <<??>>
            $query = $query-><<f a_a>>->where('<<f a_a>>', $filter['<<f a_a>>']);
        <<?>>
        }
        <<? As ow>>
            <<? f os>>
        else if (!$from_admin && $credentials != null) {
            $query = $query->where('<<f a_a>>', '=', $credentials['_id']);
        }
            <<?>>
        <<?>>
    <<?? f tS*lb>>

        // Use LIKE for <<f a>>
        if (isset($filter['<<f a_a>>'])) {
            $query = $query->orWhere('<<f a_a>>', 'LIKE', "%{$filter['<<f a_a>>']}%");
        }
    <<?>>

<<@>>
    
        return $query;
    }

<<@ F tE/hd f>>
    /**
     * Return entity list from relationship
     * @return array
     */
    public function _<<f a_a>>()
    {
    <<? f ml>>
        return $this->belongsToMany('App\Models\<<f.m AA>>', '<<M a_a>>_<<f.m a_a>>', '<<f.m a_a>>_id', '<<M a_a>>_id');
    <<??>>
        return $this->hasOne('App\Models\<<f.m AA>>', '_id', '<<f aA>>');
    <<?>>
    }
<<@>>
}