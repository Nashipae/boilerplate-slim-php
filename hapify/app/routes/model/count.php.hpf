<?php 
 
/**
 * Count <<M a-a>>.
 */
 
use Psr\Http\Message\ResponseInterface as Response;
use Psr\Http\Message\ServerRequestInterface as Request;
use Valitron\Validator as Validator;
use App\Library\HttpException;
 
$_func = function (Request $request, Response $response, array $args) {
 
<<? An !gs>>
    //Authentication
    check_auth($this, $request);
<<?>>
 
    $_get = $request->getQueryParams();
 
    $validator = new Validator($_get);
 
    // forbidden keys
<<@ F /se f>>
    unset($_get['<<f a_a>>']);
<<@>>
    
    if ($validator->validate()) {
 
        $query = App\Models\<<M AA>>::get_cursor($_get, $this->get('credential'), request_from_admin($request));
 
        $total = $query->count();
        $data = array(
            'total' => $total,
        );
 
        $payload = json_encode($data);
 
        $response->getBody()->write($payload);
        return $response->withStatus(200);
    }
 
    // Bad Request
    throw HttpException::badRequest($validator);
};
 
//Define admin route callback
$app->get('/admin/<<M a_a>>/count', $_func);
<<? An [ow>>
//Define route callback
$app->get('/<<M a_a>>/count', $_func);
<<?>>