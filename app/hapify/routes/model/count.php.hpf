<?php 
 
/**
 * Count <<M a-a>>.
 */
 
use Psr\Http\Message\ResponseInterface as Response;
use Psr\Http\Message\ServerRequestInterface as Request;
 
$app->get('/<<M a-a>>/count', function (Request $request, Response $response, array $args) {
 
    $_get = $request->getQueryParams();
 
    $validator = new Validator($_get);
    $validator->rule('required', '_page', true);
    $validator->rule('required', '_limit', true);
 
    $validator->rule(array(
        'min' => array('_page', 1)
    ));
    $validator->rule(array(
        'min' => array('_limit', 1),
        'max' => array('_limit', 100)
    ));
 
    // forbiden keys
    <<@ F /se f>>
    unset($_get['<<f a_a>>']);
    <<@>>
    
    if ($validator->validate()) {
 
        $model = new App\\Models\\<<M AA>>();
        $query = App\\Models\\<<M AA>>::get_cursor($model, $_get);
 
        $total = $query->count();
    
        $data = array(
            'total' => $total,
        );
 
        $payload = json_encode($data);
 
        $response->getBody()->write($payload);
        return $response
                  ->withHeader('Content-Type', 'application/json')
                  ->withStatus(200);
    }
 
    // Request malformed
    return $response->withStatus(400);
});